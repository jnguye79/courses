# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load packages
library(readr)
library(dplyr)
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load packages
library(readr)
library(dplyr)
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load packages
library(readr)
library(dplyr)
# Read data
data <- read_csv(file = "data1.csv")
# In the data pipeline, count county crashes and sort. Then print first 2 rows.
data %>%
count(County, sort = TRUE) %>%
print(n = 2)
# Filter by ONLY 'MD' state. Create a new dataset using this filter.
MD_only = data$State == "MD"
MD_data = data[MD_only,]
# Same concept as Q1.
MD_data %>%
count(County, sort = TRUE) %>%
print(n = 2)
# Question 3
# Which two states have the most crashes?
data %>%
count(State, sort = TRUE) %>%
print(n = 2)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(desc(sev4)) %>%
head(3)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(avg_temp) %>%
head(4)
data
# Question 1
# What is the size of the dataset? (how many datapoints do we have?)
nrows(data)
# Question 1
# What is the size of the dataset? (how many datapoints do we have?)
nrow(data)
# Question 2
# What is the mean of this column?
mean(data$`Temperature(F)`)
# Question 3
# What is the standard deviation?
sd(data$`Temperature(F)`)
# Question 4
# What is the maximum value?
max(data$`Temperature(F)`)
# Question 5
# What is the minimum value?
min(data$`Temperature(F)`)
