#pipeline approach, dplyr way:
ourData %>%
group_by(State) %>%
summarize(tempCol=sum(TotalPop)) %>%
arrange(-tempCol) %>%
print(n=15)
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load packages
library(readr)
library(dplyr)
# Read data
data <- read_csv(file = "data1.csv")
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
arrange(State)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
arrange(State) %>%
order(tempCol) %>%
print(n = 4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
arrange(State) %>%
order(tempCol) %>%
print(n = 4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
arrange(State)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
order(Temperature)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
order(`Temperature(F)`)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State)
#first of all, let's set the working directory
#to be the same as the current file.
#if Run-ing, this:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Load packages
library(readr)
library(dplyr)
# Read in data
ourData = read_csv(file="acs2017_county_data.csv")
ourData
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(avg_temp) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
arrange(mean(`Temperature(F)`)) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(mean(`Temperature(F)`)) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(avg_temp) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
arrange(mean(`Temperature(F)`)) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(mean(avg_temp)) %>%
head(4)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(avg_temp) %>%
head(4)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(desc(sev4)) %>%
head(3)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(asc(sev4)) %>%
head(3)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(asce(sev4)) %>%
head(3)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(desc(sev4)) %>%
head(3)
# Filter by ONLY 'MD' state. Create a new dataset using this filter.
MD_only = data$State == "MD"
MD_data = data[MD_only,]
# Same concept as Q1.
MD_data %>%
count(County, sort = TRUE) %>%
print(n = 2)
# Question 3
# Which two states have the most crashes?
data %>%
count(State, sort = TRUE) %>%
print(n = 2)
# Question 4
# For each state, add all accidents and calculate which fraction of them have a severity of 4.
# Which are the top three states that have the highest proportion of severity 4 accidents.
data %>%
filter(Severity == 4) %>%
group_by(State) %>%
summarise(sev4 = n() / nrow(data)) %>%
arrange(desc(sev4)) %>%
head(3)
# Question 5
# Which four states have the lowest average temperature during their crashes?
data %>%
group_by(State) %>%
summarize(avg_temp = mean(`Temperature(F)`)) %>%
arrange(avg_temp) %>%
head(4)
SAT_Data = read_csv("SAT_Results.csv")
